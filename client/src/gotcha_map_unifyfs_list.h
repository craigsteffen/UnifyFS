//Generated by translate.py

#include "config.h"
#include <gotcha/gotcha.h>
#include <stdio.h>

UNIFYFS_DEF(access, int, (const char* path, int mode));
UNIFYFS_DEF(chmod, int, (const char* path, mode_t mode));
UNIFYFS_DEF(fchmod, int, (int fd, mode_t mode));
UNIFYFS_DEF(mkdir, int, (const char* path, mode_t mode));
UNIFYFS_DEF(rmdir, int, (const char* path));
UNIFYFS_DEF(rename, int, (const char* oldpath, const char* newpath));
UNIFYFS_DEF(truncate, int, (const char* path, off_t length));
UNIFYFS_DEF(unlink, int, (const char* path));
UNIFYFS_DEF(remove, int, (const char* path));
UNIFYFS_DEF(stat, int, (const char* path, struct stat* buf));
UNIFYFS_DEF(fstat, int, (int fd, struct stat* buf));
#ifdef HAVE___XSTAT
UNIFYFS_DEF(__xstat, int, (int vers, const char* path, struct stat* buf));
#endif
#ifdef HAVE___LXSTAT
UNIFYFS_DEF(__lxstat, int, (int vers, const char* path, struct stat* buf));
#endif
UNIFYFS_DEF(creat, int, (const char* path, mode_t mode));
UNIFYFS_DEF(creat64, int, (const char* path, mode_t mode));
UNIFYFS_DEF(open, int, (const char* path, int flags, ...));
#ifdef HAVE_OPEN64
UNIFYFS_DEF(open64, int, (const char* path, int flags, ...));
#endif
UNIFYFS_DEF(__open_2, int, (const char* path, int flags, ...));

#ifdef HAVE_LIO_LISTIO
UNIFYFS_DEF(lio_listio, int, (int mode, struct aiocb* const aiocb_list[],
                              int nitems, struct sigevent* sevp));
#endif
UNIFYFS_DEF(lseek, off_t, (int fd, off_t offset, int whence));
UNIFYFS_DEF(lseek64, off64_t, (int fd, off64_t offset, int whence));

#ifdef HAVE_POSIX_FADVISE
UNIFYFS_DEF(posix_fadvise, int, (int fd, off_t offset, off_t len, int advice));
#endif
UNIFYFS_DEF(read, ssize_t, (int fd, void* buf, size_t count));
UNIFYFS_DEF(write, ssize_t, (int fd, const void* buf, size_t count));
UNIFYFS_DEF(readv, ssize_t, (int fd, const struct iovec* iov, int iovcnt));
UNIFYFS_DEF(writev, ssize_t, (int fd, const struct iovec* iov, int iovcnt));
UNIFYFS_DEF(pread, ssize_t, (int fd, void* buf, size_t count, off_t offset));
UNIFYFS_DEF(pread64, ssize_t, (int fd, void* buf, size_t count,
                               off64_t offset));
UNIFYFS_DEF(pwrite, ssize_t, (int fd, const void* buf, size_t count,
                              off_t offset));
UNIFYFS_DEF(pwrite64, ssize_t, (int fd, const void* buf, size_t count,
                                off64_t offset));
UNIFYFS_DEF(ftruncate, int, (int fd, off_t length));
UNIFYFS_DEF(fsync, int, (int fd));
UNIFYFS_DEF(fdatasync, int, (int fd));
UNIFYFS_DEF(flock, int, (int fd, int operation));
UNIFYFS_DEF(mmap, void*, (void* addr, size_t length, int prot, int flags,
                          int fd, off_t offset));
UNIFYFS_DEF(msync, int, (void* addr, size_t length, int flags));
UNIFYFS_DEF(munmap, int, (void* addr, size_t length));
UNIFYFS_DEF(mmap64, void*, (void* addr, size_t length, int prot, int flags,
                            int fd, off_t offset));
#ifdef HAVE___FXSTAT
UNIFYFS_DEF(__fxstat, int, (int vers, int fd, struct stat* buf));
#endif
UNIFYFS_DEF(close, int, (int fd));
UNIFYFS_DEF(opendir, DIR*, (const char* name));
UNIFYFS_DEF(fdopendir, DIR*, (int fd));
UNIFYFS_DEF(closedir, int, (DIR* dirp));
UNIFYFS_DEF(readdir, struct dirent*, (DIR* dirp));
UNIFYFS_DEF(rewinddir, void, (DIR* dirp));
UNIFYFS_DEF(dirfd, int, (DIR* dirp));
UNIFYFS_DEF(telldir, long, (DIR* dirp));
UNIFYFS_DEF(scandir, int, (const char* dirp, struct dirent** namelist,
                           int (*filter)(const struct dirent*),
                           int (*compar)(const struct dirent**,
                                   const struct dirent**)));
UNIFYFS_DEF(seekdir, void, (DIR* dirp, long loc));
UNIFYFS_DEF(fopen, FILE*, (const char* path, const char* mode));
UNIFYFS_DEF(freopen, FILE*, (const char* path, const char* mode,
                             FILE* stream));
UNIFYFS_DEF(setvbuf, int, (FILE* stream, char* buf, int type, size_t size));
UNIFYFS_DEF(setbuf, void, (FILE* stream, char* buf));
UNIFYFS_DEF(ungetc, int, (int c, FILE* stream));
UNIFYFS_DEF(fgetc, int, (FILE* stream));
UNIFYFS_DEF(fputc, int, (int c, FILE* stream));
UNIFYFS_DEF(getc, int, (FILE* stream));
UNIFYFS_DEF(putc, int, (int c, FILE* stream));
UNIFYFS_DEF(fgets, char*, (char* s, int n, FILE* stream));
UNIFYFS_DEF(fputs, int, (const char* s, FILE* stream));
UNIFYFS_DEF(fread, size_t, (void* ptr, size_t size, size_t nitems,
                            FILE* stream));
UNIFYFS_DEF(fwrite, size_t, (const void* ptr, size_t size, size_t nitems,
                             FILE* stream));
UNIFYFS_DEF(fprintf, int, (FILE* stream, const char* format, ...));
UNIFYFS_DEF(vfprintf, int, (FILE* stream, const char* format, va_list ap));
UNIFYFS_DEF(fscanf, int, (FILE* stream, const char* format, ...));
UNIFYFS_DEF(vfscanf, int, (FILE* stream, const char* format, va_list ap));
UNIFYFS_DEF(fseek, int, (FILE* stream, long offset, int whence));
UNIFYFS_DEF(fseeko, int, (FILE* stream, off_t offset, int whence));
UNIFYFS_DEF(ftell, long, (FILE* stream));
UNIFYFS_DEF(ftello, off_t, (FILE* stream));
UNIFYFS_DEF(rewind, void, (FILE* stream));
UNIFYFS_DEF(fgetpos, int, (FILE* stream, fpos_t* pos));
UNIFYFS_DEF(fsetpos, int, (FILE* stream, const fpos_t* pos));
UNIFYFS_DEF(fflush, int, (FILE* stream));
UNIFYFS_DEF(feof, int, (FILE* stream));
UNIFYFS_DEF(ferror, int, (FILE* stream));
UNIFYFS_DEF(clearerr, void, (FILE* stream));
UNIFYFS_DEF(fileno, int, (FILE* stream));
UNIFYFS_DEF(fclose, int, (FILE* stream));
UNIFYFS_DEF(fwprintf, int, (FILE* stream, const wchar_t* format, ...));
UNIFYFS_DEF(fwscanf, int, (FILE* stream, const wchar_t* format, ...));
UNIFYFS_DEF(vfwprintf, int, (FILE* stream, const wchar_t* format, va_list arg));
UNIFYFS_DEF(vfwscanf, int, (FILE* stream, const wchar_t* format, va_list arg));
UNIFYFS_DEF(fgetwc, wint_t, (FILE* stream));
UNIFYFS_DEF(fgetws, wchar_t*, (wchar_t* s, int n, FILE* stream));
UNIFYFS_DEF(fputwc, wint_t, (wchar_t wc, FILE* stream));
UNIFYFS_DEF(fputws, int, (const wchar_t* s, FILE* stream));
UNIFYFS_DEF(fwide, int, (FILE* stream, int mode));
UNIFYFS_DEF(getwc, wint_t, (FILE* stream));
UNIFYFS_DEF(putwc, wint_t, (wchar_t c, FILE* stream));
UNIFYFS_DEF(ungetwc, wint_t, (wint_t c, FILE* stream));

struct gotcha_binding_t wrap_unifyfs_list[] = {
    { "access", UNIFYFS_WRAP(access), &UNIFYFS_REAL(access) },
    { "chmod", UNIFYFS_WRAP(chmod), &UNIFYFS_REAL(chmod) },
    { "fchmod", UNIFYFS_WRAP(fchmod), &UNIFYFS_REAL(fchmod) },
    { "mkdir", UNIFYFS_WRAP(mkdir), &UNIFYFS_REAL(mkdir) },
    { "rmdir", UNIFYFS_WRAP(rmdir), &UNIFYFS_REAL(rmdir) },
    { "rename", UNIFYFS_WRAP(rename), &UNIFYFS_REAL(rename) },
    { "truncate", UNIFYFS_WRAP(truncate), &UNIFYFS_REAL(truncate) },
    { "unlink", UNIFYFS_WRAP(unlink), &UNIFYFS_REAL(unlink) },
    { "remove", UNIFYFS_WRAP(remove), &UNIFYFS_REAL(remove) },
    { "stat", UNIFYFS_WRAP(stat), &UNIFYFS_REAL(stat) },
    { "fstat", UNIFYFS_WRAP(fstat), &UNIFYFS_REAL(fstat) },
    { "__xstat", UNIFYFS_WRAP(__xstat), &UNIFYFS_REAL(__xstat) },
    { "__lxstat", UNIFYFS_WRAP(__lxstat), &UNIFYFS_REAL(__lxstat) },
    { "creat", UNIFYFS_WRAP(creat), &UNIFYFS_REAL(creat) },
    { "creat64", UNIFYFS_WRAP(creat64), &UNIFYFS_REAL(creat64) },
    { "open", UNIFYFS_WRAP(open), &UNIFYFS_REAL(open) },
    { "open64", UNIFYFS_WRAP(open64), &UNIFYFS_REAL(open64) },
    { "__open_2", UNIFYFS_WRAP(__open_2), &UNIFYFS_REAL(__open_2) },
    { "lio_listio", UNIFYFS_WRAP(lio_listio), &UNIFYFS_REAL(lio_listio) },
    { "lseek", UNIFYFS_WRAP(lseek), &UNIFYFS_REAL(lseek) },
    { "lseek64", UNIFYFS_WRAP(lseek64), &UNIFYFS_REAL(lseek64) },
    { "posix_fadvise", UNIFYFS_WRAP(posix_fadvise), &UNIFYFS_REAL(posix_fadvise) },
    { "read", UNIFYFS_WRAP(read), &UNIFYFS_REAL(read) },
    { "write", UNIFYFS_WRAP(write), &UNIFYFS_REAL(write) },
    { "readv", UNIFYFS_WRAP(readv), &UNIFYFS_REAL(readv) },
    { "writev", UNIFYFS_WRAP(writev), &UNIFYFS_REAL(writev) },
    { "pread", UNIFYFS_WRAP(pread), &UNIFYFS_REAL(pread) },
    { "pread64", UNIFYFS_WRAP(pread64), &UNIFYFS_REAL(pread64) },
    { "pwrite", UNIFYFS_WRAP(pwrite), &UNIFYFS_REAL(pwrite) },
    { "pwrite64", UNIFYFS_WRAP(pwrite64), &UNIFYFS_REAL(pwrite64) },
    { "ftruncate", UNIFYFS_WRAP(ftruncate), &UNIFYFS_REAL(ftruncate) },
    { "fsync", UNIFYFS_WRAP(fsync), &UNIFYFS_REAL(fsync) },
    { "fdatasync", UNIFYFS_WRAP(fdatasync), &UNIFYFS_REAL(fdatasync) },
    { "flock", UNIFYFS_WRAP(flock), &UNIFYFS_REAL(flock) },
    { "mmap", UNIFYFS_WRAP(mmap), &UNIFYFS_REAL(mmap) },
    { "msync", UNIFYFS_WRAP(msync), &UNIFYFS_REAL(msync) },
    { "munmap", UNIFYFS_WRAP(munmap), &UNIFYFS_REAL(munmap) },
    { "mmap64", UNIFYFS_WRAP(mmap64), &UNIFYFS_REAL(mmap64) },
    { "__fxstat", UNIFYFS_WRAP(__fxstat), &UNIFYFS_REAL(__fxstat) },
    { "close", UNIFYFS_WRAP(close), &UNIFYFS_REAL(close) },
    { "opendir", UNIFYFS_WRAP(opendir), &UNIFYFS_REAL(opendir) },
    { "fdopendir", UNIFYFS_WRAP(fdopendir), &UNIFYFS_REAL(fdopendir) },
    { "closedir", UNIFYFS_WRAP(closedir), &UNIFYFS_REAL(closedir) },
    { "readdir", UNIFYFS_WRAP(readdir), &UNIFYFS_REAL(readdir) },
    { "rewinddir", UNIFYFS_WRAP(rewinddir), &UNIFYFS_REAL(rewinddir) },
    { "dirfd", UNIFYFS_WRAP(dirfd), &UNIFYFS_REAL(dirfd) },
    { "telldir", UNIFYFS_WRAP(telldir), &UNIFYFS_REAL(telldir) },
    { "scandir", UNIFYFS_WRAP(scandir), &UNIFYFS_REAL(scandir) },
    { "seekdir", UNIFYFS_WRAP(seekdir), &UNIFYFS_REAL(seekdir) },
    { "fopen", UNIFYFS_WRAP(fopen), &UNIFYFS_REAL(fopen) },
    { "freopen", UNIFYFS_WRAP(freopen), &UNIFYFS_REAL(freopen) },
    { "setvbuf", UNIFYFS_WRAP(setvbuf), &UNIFYFS_REAL(setvbuf) },
    { "setbuf", UNIFYFS_WRAP(setbuf), &UNIFYFS_REAL(setbuf) },
    { "ungetc", UNIFYFS_WRAP(ungetc), &UNIFYFS_REAL(ungetc) },
    { "fgetc", UNIFYFS_WRAP(fgetc), &UNIFYFS_REAL(fgetc) },
    { "fputc", UNIFYFS_WRAP(fputc), &UNIFYFS_REAL(fputc) },
    { "getc", UNIFYFS_WRAP(getc), &UNIFYFS_REAL(getc) },
    { "putc", UNIFYFS_WRAP(putc), &UNIFYFS_REAL(putc) },
    { "fgets", UNIFYFS_WRAP(fgets), &UNIFYFS_REAL(fgets) },
    { "fputs", UNIFYFS_WRAP(fputs), &UNIFYFS_REAL(fputs) },
    { "fread", UNIFYFS_WRAP(fread), &UNIFYFS_REAL(fread) },
    { "fwrite", UNIFYFS_WRAP(fwrite), &UNIFYFS_REAL(fwrite) },
    { "fprintf", UNIFYFS_WRAP(fprintf), &UNIFYFS_REAL(fprintf) },
    { "vfprintf", UNIFYFS_WRAP(vfprintf), &UNIFYFS_REAL(vfprintf) },
    { "fscanf", UNIFYFS_WRAP(fscanf), &UNIFYFS_REAL(fscanf) },
    { "vfscanf", UNIFYFS_WRAP(vfscanf), &UNIFYFS_REAL(vfscanf) },
    { "fseek", UNIFYFS_WRAP(fseek), &UNIFYFS_REAL(fseek) },
    { "fseeko", UNIFYFS_WRAP(fseeko), &UNIFYFS_REAL(fseeko) },
    { "ftell", UNIFYFS_WRAP(ftell), &UNIFYFS_REAL(ftell) },
    { "ftello", UNIFYFS_WRAP(ftello), &UNIFYFS_REAL(ftello) },
    { "rewind", UNIFYFS_WRAP(rewind), &UNIFYFS_REAL(rewind) },
    { "fgetpos", UNIFYFS_WRAP(fgetpos), &UNIFYFS_REAL(fgetpos) },
    { "fsetpos", UNIFYFS_WRAP(fsetpos), &UNIFYFS_REAL(fsetpos) },
    { "fflush", UNIFYFS_WRAP(fflush), &UNIFYFS_REAL(fflush) },
    { "feof", UNIFYFS_WRAP(feof), &UNIFYFS_REAL(feof) },
    { "ferror", UNIFYFS_WRAP(ferror), &UNIFYFS_REAL(ferror) },
    { "clearerr", UNIFYFS_WRAP(clearerr), &UNIFYFS_REAL(clearerr) },
    { "fileno", UNIFYFS_WRAP(fileno), &UNIFYFS_REAL(fileno) },
    { "fclose", UNIFYFS_WRAP(fclose), &UNIFYFS_REAL(fclose) },
    { "fwprintf", UNIFYFS_WRAP(fwprintf), &UNIFYFS_REAL(fwprintf) },
    { "fwscanf", UNIFYFS_WRAP(fwscanf), &UNIFYFS_REAL(fwscanf) },
    { "vfwprintf", UNIFYFS_WRAP(vfwprintf), &UNIFYFS_REAL(vfwprintf) },
    { "vfwscanf", UNIFYFS_WRAP(vfwscanf), &UNIFYFS_REAL(vfwscanf) },
    { "fgetwc", UNIFYFS_WRAP(fgetwc), &UNIFYFS_REAL(fgetwc) },
    { "fgetws", UNIFYFS_WRAP(fgetws), &UNIFYFS_REAL(fgetws) },
    { "fputwc", UNIFYFS_WRAP(fputwc), &UNIFYFS_REAL(fputwc) },
    { "fputws", UNIFYFS_WRAP(fputws), &UNIFYFS_REAL(fputws) },
    { "fwide", UNIFYFS_WRAP(fwide), &UNIFYFS_REAL(fwide) },
    { "getwc", UNIFYFS_WRAP(getwc), &UNIFYFS_REAL(getwc) },
    { "putwc", UNIFYFS_WRAP(putwc), &UNIFYFS_REAL(putwc) },
    { "ungetwc", UNIFYFS_WRAP(ungetwc), &UNIFYFS_REAL(ungetwc) },
};

#define GOTCHA_NFUNCS (sizeof(wrap_unifyfs_list) / sizeof(wrap_unifyfs_list[0]))
